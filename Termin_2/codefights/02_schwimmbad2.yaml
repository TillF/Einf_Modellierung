---
task_name: schwimmbad2

description: Wie in der vorherigen Aufgabe betrachten wir ein Schwimmbad, in dem sich Bakterien mit exponentiellen Wachstum vermehren.
Wenn der Bademeister bemerkt, dass der Grenzwert `n_grenzwert` überschritten wird, setzt er Chlor zum Becken hinzu. Dadurch verändert sich die Wachstumsrate auf `r_chlor`.
Gib an, wie groß die Bakterienpopulation 3 Tage nach der Chlorzugabe ist (ganzzahlig gerundet). 
Wurde der Grenzwert nicht überschritten und war eine Chlorzugabe somit nicht nötig, gib die maximal beobachtetet Bakteriendichte zurück (ganzzahlig gerundet).

Diese Funktion für das exponentielle Wachstum kannst Du verwenden:


    exp_Wachstum = function (n0, r, nt)
    {  
       n = rep(NA,nt) #Vektor für zeitlichen Verlauf der Population anlegen
      n[1] = n0
      
      for (t in 2:nt)
        n[t] = n[t-1] + r * n[t-1]
      
      return(n)
    }


  
#### Beispiel
Für `n0 = 2`, `r = 0.1` entwickelt sich die Bakterienpopulations wie `[2.0, 2.2, 2.4, 2.6, ... , 82.2, 90.5,  99.5, 109.5, ...]`. Am 43. Tag wird der Grenzwert `n_grenzwert=100` überschritten. Nun wird Chlor zugegeben, wodurch die Bakterien in den folgenden Tagen reduziert werden:  `[109.5, 98.5, 88.7, 79.8]`. 
Es soll als das Ergebnis `80` (gerundete von 79.8) erzeugt werden.
#### Input / Output
 
   
input1:
	name: n0	
	type: float
	description: Startpopulation der Bakterien

input2:
	name: r	
	type: float
	description: Wachstumsrate

input3:
	name: n_grenzwert
	type: float
	description: Grenzwert für Sperrung des Badegewässers (Chlorzugabe)

input2:
	name: r_chlor
	type: float
	description: Wachstumsrate nach Chlorzugabe
	
output:
	type: integer
	description: Bakterienpopulation drei Tage nach Chlorzugabe (gerundet)


	
test1:
	input: 
	- 2
	- 0.1
	- 100
	- -0.1
	output: 80	

	
test2:
	input: 
	- 50
	- 0.01
	- 200
	- 0
	output: 201	
	
test3:
	input: 
	- 5
	- 0.001
	- 1000
	- -0.1
	output: 14	
	
test4:
	input: 
	- 10
	- 1.2
	- 100
	- 0.3
	output: 234	
	
test5:
	input: 
	- 200
	- 0.1
	- 100
	- 0.01
	output: 206	
	
	
solution: |
	schwimmbad2 = function(n0, r, n_grenzwert, r_chlor) {
  
  exp_Wachstum = function (n0, r, nt)
  {  
    # n0 : Startpopulation
    # r  : Wachstumsrate
    # nt : Anzahl Zeitschritte
    
    n = rep(NA,nt) #Vektor für zeitlichen Verlauf der Population anlegen
    n[1] = n0
    
    for (t in 2:nt)
      n[t] = n[t-1] + r * n[t-1]
    
    return(n)
  }
  
  n = exp_Wachstum (n0=n0, r=r, nt=1000)
  sperrtag = which (n > n_grenzwert)[1]
  
  if (is.na(sperrtag)) return(round(max(n)))   #Grenzwert wurde nicht überschritten, gib Maximalpopulation zurück
  
  N_chlor = exp_Wachstum (n0=n[sperrtag], r=r_chlor, nt=4)  #Wachstum unter Chloreinfluss
  
  return (round(N_chlor[4]))
}
	