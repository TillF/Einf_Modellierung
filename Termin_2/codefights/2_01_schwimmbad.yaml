---
task_name: schwimmbad

description: Die Vermehrung von Coli-Bakterien in einem Schwimmbad lasse sich mit dem Ansatz des exponentiellen Wachstums beschreiben.
Dafür haben wir folgende Funktion verwendet, die Du in den Quelltext kopieren kannst:
exp_Wachstum = function (N0, r, nt)
  {  
    
    N = rep(NA,nt) #Vektor für zeitlichen Verlauf der Population anlegen
    N[1] = N0
    
    for (t in 2:nt)
      N[t] = N[t-1] + r * N[t-1]
    
    return(N)
  }

  Ab einer Bakterienpopulation _N_grenzwert_ ist das Baden nicht mehr gefahrlos möglich.
  Gib an, ab welchem Zeitschritt der Badebetrieb bei den gegebenen Parametern (_N0_, _r_, _nt_) und _N_grenzwert_ eingestellt werden muss.
  Wird der Schwellenwert innerhalb von 1000 Tagen nicht überschritten, gib -1 zurück.


  
input1:
	name: N0	
	type: integer
	description: Startpopulation

input2:
	name: r	
	type: float
	description: Wachstumsrate

input3:
	name: _N_grenzwert_	
	type: float
	description: Grenzwert für Sperrung des Badegewässers.

output:
	type: integer
	description: Zeitschritt, in dem der Grenzwert erstmal überschritten wird.




	
test1:
	input: 
	- 2
	- 0.1
	- 100

	output: 43	
	
test2:
	input: 
	- 50
	- 0.01
	- 200
	output: 141	
	
test3:
	input: 
	- 5
	- 0.001
	- 1000
	output: -1	
	
test4:
	input: 
	- 10
	- 1.2
	- 100
	output: 1	
	
test5:
	input: 
	- 200
	- 0.1
	- 100
	output: 4	
	
	
	
solution: |
	schwimmbad = function(N0, r, N_grenzwert) {
  
  exp_Wachstum = function (N0, r, nt)
  {  
    # N0 : Startpopulation
    # r  : Wachstumsrate
    # nt : Anzahl Zeitschritte
    
    N = rep(NA,nt) #Vektor für zeitlichen Verlauf der Population anlegen
    N[1] = N0
    
    for (t in 2:nt)
      N[t] = N[t-1] + r * N[t-1]
    
    return(N)
  }
  
  N = exp_Wachstum (N0, r, 1000)
  sperrtag = which (N > N_grenzwert)[1]
  
  if (is.na(sperrtag)) sperrtag = -1
  
  return (sperrtag)
}
	